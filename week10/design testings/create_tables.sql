CREATE TABLE IF NOT EXISTS users(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL,
    hash TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS acgroups(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS subjects(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS instructors(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    lastname TEXT NOT NULL,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id)
);
CREATE TABLE IF NOT EXISTS acg_ins(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    acg_id INTEGER NOT NULL,
    ins_id INTEGER NOT NULL,
    FOREIGN KEY (acg_id) REFERENCES acgroups (id),
    FOREIGN KEY (ins_id) REFERENCES instructors (id)
);
CREATE TABLE IF NOT EXISTS students(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    lastname TEXT NOT NULL,
    user_id INTEGER NOT NULL,
    acg_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (acg_id) REFERENCES acgroups (id)
);
CREATE TABLE IF NOT EXISTS courses(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    ins_id INTEGER NOT NULL,
    day TEXT NOT NULL,
    start TEXT NOT NULL,
    end TEXT NOT NULL,
    sub_id INTEGER NOT NULL,
    acg_id INTEGER NOT NULL,
    requires TEXT,
    available INTEGER NOT NULL,
    FOREIGN KEY (ins_id) REFERENCES instructors (id),
    FOREIGN KEY (sub_id) REFERENCES subjects (id),
    FOREIGN KEY (acg_id) REFERENCES acgroups (id)
);
CREATE TABLE IF NOT EXISTS taken_courses(
    id INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
    stu_id INTEGER NOT NULL,
    crs_id INTEGER NOT NULL,
    FOREIGN KEY (stu_id) REFERENCES students (id),
    FOREIGN KEY (crs_id) REFERENCES courses (id)
);